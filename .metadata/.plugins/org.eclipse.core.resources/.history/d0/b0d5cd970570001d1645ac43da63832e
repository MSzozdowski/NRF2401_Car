/*
 * nrf2401.h
 *
 *  Created on: Nov 12, 2022
 *      Author: MSzozdowski
 */

#ifndef INC_NRF2401_NRF2401_H_
#define INC_NRF2401_NRF2401_H_

#define NRF_CE_LOW	HAL_GPIO_WritePin(NRF_CE_GPIO_Port,NRF_CE_Pin, GPIO_PIN_RESET);
#define NRF_CE_HIGH	  	HAL_GPIO_WritePin(NRF_CE_GPIO_Port,NRF_CE_Pin, GPIO_PIN_SET);

#define NRF_CSN_LOW	  	HAL_GPIO_WritePin(NRF_CSN_GPIO_Port, NRF_CSN_Pin, GPIO_PIN_RESET);
#define NRF_CSN_HIGH  	HAL_GPIO_WritePin(NRF_CSN_GPIO_Port, NRF_CSN_Pin, GPIO_PIN_SET);

//void NRF_process(SPI_HandleTypeDef *hspi);
void NRF_Config(SPI_HandleTypeDef *hspi);

void NRF_SetRXAddress(uint8_t pipe, uint8_t* address);
void NRF_SetTXAddress(uint8_t* address);
void NRF_TX_Mode(void);
uint8_t NRF_SendPacket(uint8_t* Data, uint8_t Size);

void nRF24_Init(SPI_HandleTypeDef *hspi);
//void NRF_process(SPI_HandleTypeDef *hspi);

typedef enum
{
	NRF24_RECEIVED_PACKET,		// 0
	NRF24_NO_RECEIVED_PACKET,	// 1
} nRF24_RX_Status;

typedef enum
{
	NRF24_TRANSMITTED_PACKET,		// 0
	NRF24_NO_TRANSMITTED_PACKET,	// 1
} nRF24_TX_Status;

typedef enum{
	NRF_POWER_DOWN,
	NRF_START_UP,
	NRF_STANBY1,
	NRF_STANBY2,
	NRF_RX_SETTING,
	NRF_TX_SETTING,
	NRF_TX_MODE,
	NRF_RX_MODE
}NRF_State_t;
#endif /* INC_NRF2401_NRF2401_H_ */
